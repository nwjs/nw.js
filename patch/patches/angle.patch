diff --git a/src/libANGLE/renderer/d3d/d3d11/win32/NativeWindow11Win32.cpp b/src/libANGLE/renderer/d3d/d3d11/win32/NativeWindow11Win32.cpp
index ac6bda6..f66eb04 100644
--- src/libANGLE/renderer/d3d/d3d11/win32/NativeWindow11Win32.cpp
+++ src/libANGLE/renderer/d3d/d3d11/win32/NativeWindow11Win32.cpp
@@ -138,6 +138,7 @@ HRESULT NativeWindow11Win32::createSwapChain(ID3D11Device *device,
         }
         mVisual->SetContent(swapChain1);
         mCompositionTarget->SetRoot(mVisual);
+        result = factory2->MakeWindowAssociation(mWindow, DXGI_MWA_NO_ALT_ENTER);
         SafeRelease(factory2);
         return result;
     }
@@ -168,6 +169,7 @@ HRESULT NativeWindow11Win32::createSwapChain(ID3D11Device *device,
         {
             *swapChain = static_cast<IDXGISwapChain *>(swapChain1);
         }
+        result = factory2->MakeWindowAssociation(mWindow, DXGI_MWA_NO_ALT_ENTER);
         SafeRelease(factory2);
         return result;
     }
@@ -190,7 +192,11 @@ HRESULT NativeWindow11Win32::createSwapChain(ID3D11Device *device,
     swapChainDesc.Windowed           = TRUE;
     swapChainDesc.SwapEffect         = DXGI_SWAP_EFFECT_DISCARD;
 
-    return factory->CreateSwapChain(device, &swapChainDesc, swapChain);
+    HRESULT result = factory->CreateSwapChain(device, &swapChainDesc, swapChain);
+    if (FAILED(result)) {
+        return result;
+    }
+    return factory->MakeWindowAssociation(mWindow, DXGI_MWA_NO_ALT_ENTER);
 }
 
 void NativeWindow11Win32::commitChange()
-- 
2.6.3.windows.1

